//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.225
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 4.0.50826.0
// 
namespace SubastAutos.Remoting {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Subasta", Namespace="http://schemas.datacontract.org/2004/07/SubastAutos.ModeloDeDatos")]
    public partial class Subasta : object, System.ComponentModel.INotifyPropertyChanged {
        
        private sbyte EstadoField;
        
        private int IdSubastaField;
        
        private int IdVehiculoField;
        
        private string LogginDueñoField;
        
        private double PrecioSugeridoField;
        
        private System.Collections.ObjectModel.ObservableCollection<SubastAutos.Remoting.Vehiculo> VehiculosDeSubastaField;
        
        private string fechaPropuestaField;
        
        private int horaField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public sbyte Estado {
            get {
                return this.EstadoField;
            }
            set {
                if ((this.EstadoField.Equals(value) != true)) {
                    this.EstadoField = value;
                    this.RaisePropertyChanged("Estado");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdSubasta {
            get {
                return this.IdSubastaField;
            }
            set {
                if ((this.IdSubastaField.Equals(value) != true)) {
                    this.IdSubastaField = value;
                    this.RaisePropertyChanged("IdSubasta");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdVehiculo {
            get {
                return this.IdVehiculoField;
            }
            set {
                if ((this.IdVehiculoField.Equals(value) != true)) {
                    this.IdVehiculoField = value;
                    this.RaisePropertyChanged("IdVehiculo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LogginDueño {
            get {
                return this.LogginDueñoField;
            }
            set {
                if ((object.ReferenceEquals(this.LogginDueñoField, value) != true)) {
                    this.LogginDueñoField = value;
                    this.RaisePropertyChanged("LogginDueño");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double PrecioSugerido {
            get {
                return this.PrecioSugeridoField;
            }
            set {
                if ((this.PrecioSugeridoField.Equals(value) != true)) {
                    this.PrecioSugeridoField = value;
                    this.RaisePropertyChanged("PrecioSugerido");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<SubastAutos.Remoting.Vehiculo> VehiculosDeSubasta {
            get {
                return this.VehiculosDeSubastaField;
            }
            set {
                if ((object.ReferenceEquals(this.VehiculosDeSubastaField, value) != true)) {
                    this.VehiculosDeSubastaField = value;
                    this.RaisePropertyChanged("VehiculosDeSubasta");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string fechaPropuesta {
            get {
                return this.fechaPropuestaField;
            }
            set {
                if ((object.ReferenceEquals(this.fechaPropuestaField, value) != true)) {
                    this.fechaPropuestaField = value;
                    this.RaisePropertyChanged("fechaPropuesta");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int hora {
            get {
                return this.horaField;
            }
            set {
                if ((this.horaField.Equals(value) != true)) {
                    this.horaField = value;
                    this.RaisePropertyChanged("hora");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Vehiculo", Namespace="http://schemas.datacontract.org/2004/07/SubastAutos.ModeloDeDatos")]
    public partial class Vehiculo : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int añoField;
        
        private string colorField;
        
        private string combustibleField;
        
        private string estadoField;
        
        private int idCombustibleField;
        
        private int idEstadoField;
        
        private int idTipoVehiculoField;
        
        private int idVehiculoField;
        
        private double kilometrajeField;
        
        private string marcaField;
        
        private string modeloField;
        
        private string pathImagenField;
        
        private string placaField;
        
        private double precioBaseField;
        
        private string tipoVehiculoField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int año {
            get {
                return this.añoField;
            }
            set {
                if ((this.añoField.Equals(value) != true)) {
                    this.añoField = value;
                    this.RaisePropertyChanged("año");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string color {
            get {
                return this.colorField;
            }
            set {
                if ((object.ReferenceEquals(this.colorField, value) != true)) {
                    this.colorField = value;
                    this.RaisePropertyChanged("color");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string combustible {
            get {
                return this.combustibleField;
            }
            set {
                if ((object.ReferenceEquals(this.combustibleField, value) != true)) {
                    this.combustibleField = value;
                    this.RaisePropertyChanged("combustible");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string estado {
            get {
                return this.estadoField;
            }
            set {
                if ((object.ReferenceEquals(this.estadoField, value) != true)) {
                    this.estadoField = value;
                    this.RaisePropertyChanged("estado");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int idCombustible {
            get {
                return this.idCombustibleField;
            }
            set {
                if ((this.idCombustibleField.Equals(value) != true)) {
                    this.idCombustibleField = value;
                    this.RaisePropertyChanged("idCombustible");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int idEstado {
            get {
                return this.idEstadoField;
            }
            set {
                if ((this.idEstadoField.Equals(value) != true)) {
                    this.idEstadoField = value;
                    this.RaisePropertyChanged("idEstado");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int idTipoVehiculo {
            get {
                return this.idTipoVehiculoField;
            }
            set {
                if ((this.idTipoVehiculoField.Equals(value) != true)) {
                    this.idTipoVehiculoField = value;
                    this.RaisePropertyChanged("idTipoVehiculo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int idVehiculo {
            get {
                return this.idVehiculoField;
            }
            set {
                if ((this.idVehiculoField.Equals(value) != true)) {
                    this.idVehiculoField = value;
                    this.RaisePropertyChanged("idVehiculo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double kilometraje {
            get {
                return this.kilometrajeField;
            }
            set {
                if ((this.kilometrajeField.Equals(value) != true)) {
                    this.kilometrajeField = value;
                    this.RaisePropertyChanged("kilometraje");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string marca {
            get {
                return this.marcaField;
            }
            set {
                if ((object.ReferenceEquals(this.marcaField, value) != true)) {
                    this.marcaField = value;
                    this.RaisePropertyChanged("marca");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string modelo {
            get {
                return this.modeloField;
            }
            set {
                if ((object.ReferenceEquals(this.modeloField, value) != true)) {
                    this.modeloField = value;
                    this.RaisePropertyChanged("modelo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string pathImagen {
            get {
                return this.pathImagenField;
            }
            set {
                if ((object.ReferenceEquals(this.pathImagenField, value) != true)) {
                    this.pathImagenField = value;
                    this.RaisePropertyChanged("pathImagen");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string placa {
            get {
                return this.placaField;
            }
            set {
                if ((object.ReferenceEquals(this.placaField, value) != true)) {
                    this.placaField = value;
                    this.RaisePropertyChanged("placa");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double precioBase {
            get {
                return this.precioBaseField;
            }
            set {
                if ((this.precioBaseField.Equals(value) != true)) {
                    this.precioBaseField = value;
                    this.RaisePropertyChanged("precioBase");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string tipoVehiculo {
            get {
                return this.tipoVehiculoField;
            }
            set {
                if ((object.ReferenceEquals(this.tipoVehiculoField, value) != true)) {
                    this.tipoVehiculoField = value;
                    this.RaisePropertyChanged("tipoVehiculo");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="", ConfigurationName="Remoting.Remoting", CallbackContract=typeof(SubastAutos.Remoting.RemotingCallback))]
    public interface Remoting {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:Remoting/Reportar", ReplyAction="urn:Remoting/ReportarResponse")]
        System.IAsyncResult BeginReportar(int idSubasta, int idVehiculo, string loggin, string fechaPropuesta, double montoSugerido, System.AsyncCallback callback, object asyncState);
        
        void EndReportar(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, AsyncPattern=true, Action="urn:Remoting/Salir")]
        System.IAsyncResult BeginSalir(System.AsyncCallback callback, object asyncState);
        
        void EndSalir(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:Remoting/Registrarse", ReplyAction="urn:Remoting/RegistrarseResponse")]
        System.IAsyncResult BeginRegistrarse(System.AsyncCallback callback, object asyncState);
        
        void EndRegistrarse(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:Remoting/ModificarSubasta", ReplyAction="urn:Remoting/ModificarSubastaResponse")]
        System.IAsyncResult BeginModificarSubasta(int idSubasta, int idVehiculo, string loggin, string fechaPropuesta, double montoSugerido, System.AsyncCallback callback, object asyncState);
        
        SubastAutos.Remoting.Subasta EndModificarSubasta(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:Remoting/VehiculosDeSubastaActual", ReplyAction="urn:Remoting/VehiculosDeSubastaActualResponse")]
        System.IAsyncResult BeginVehiculosDeSubastaActual(System.AsyncCallback callback, object asyncState);
        
        SubastAutos.Remoting.Subasta EndVehiculosDeSubastaActual(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface RemotingCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="urn:Remoting/ActualizarListaDeAutosParaSubasta")]
        void ActualizarListaDeAutosParaSubasta(SubastAutos.Remoting.Subasta s);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface RemotingChannel : SubastAutos.Remoting.Remoting, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ModificarSubastaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ModificarSubastaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public SubastAutos.Remoting.Subasta Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((SubastAutos.Remoting.Subasta)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class VehiculosDeSubastaActualCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public VehiculosDeSubastaActualCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public SubastAutos.Remoting.Subasta Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((SubastAutos.Remoting.Subasta)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RemotingClient : System.ServiceModel.DuplexClientBase<SubastAutos.Remoting.Remoting>, SubastAutos.Remoting.Remoting {
        
        private BeginOperationDelegate onBeginReportarDelegate;
        
        private EndOperationDelegate onEndReportarDelegate;
        
        private System.Threading.SendOrPostCallback onReportarCompletedDelegate;
        
        private BeginOperationDelegate onBeginSalirDelegate;
        
        private EndOperationDelegate onEndSalirDelegate;
        
        private System.Threading.SendOrPostCallback onSalirCompletedDelegate;
        
        private BeginOperationDelegate onBeginRegistrarseDelegate;
        
        private EndOperationDelegate onEndRegistrarseDelegate;
        
        private System.Threading.SendOrPostCallback onRegistrarseCompletedDelegate;
        
        private BeginOperationDelegate onBeginModificarSubastaDelegate;
        
        private EndOperationDelegate onEndModificarSubastaDelegate;
        
        private System.Threading.SendOrPostCallback onModificarSubastaCompletedDelegate;
        
        private BeginOperationDelegate onBeginVehiculosDeSubastaActualDelegate;
        
        private EndOperationDelegate onEndVehiculosDeSubastaActualDelegate;
        
        private System.Threading.SendOrPostCallback onVehiculosDeSubastaActualCompletedDelegate;
        
        private bool useGeneratedCallback;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public RemotingClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public RemotingClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public RemotingClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public RemotingClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public RemotingClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public RemotingClient(string endpointConfigurationName) : 
                this(new RemotingClientCallback(), endpointConfigurationName) {
        }
        
        private RemotingClient(RemotingClientCallback callbackImpl, string endpointConfigurationName) : 
                this(new System.ServiceModel.InstanceContext(callbackImpl), endpointConfigurationName) {
            useGeneratedCallback = true;
            callbackImpl.Initialize(this);
        }
        
        public RemotingClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                this(new RemotingClientCallback(), binding, remoteAddress) {
        }
        
        private RemotingClient(RemotingClientCallback callbackImpl, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                this(new System.ServiceModel.InstanceContext(callbackImpl), binding, remoteAddress) {
            useGeneratedCallback = true;
            callbackImpl.Initialize(this);
        }
        
        public RemotingClient() : 
                this(new RemotingClientCallback()) {
        }
        
        private RemotingClient(RemotingClientCallback callbackImpl) : 
                this(new System.ServiceModel.InstanceContext(callbackImpl)) {
            useGeneratedCallback = true;
            callbackImpl.Initialize(this);
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("No se puede establecer el objeto CookieContainer. Asegúrese de que el enlace cont" +
                            "iene un objeto HttpCookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> ReportarCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SalirCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> RegistrarseCompleted;
        
        public event System.EventHandler<ModificarSubastaCompletedEventArgs> ModificarSubastaCompleted;
        
        public event System.EventHandler<VehiculosDeSubastaActualCompletedEventArgs> VehiculosDeSubastaActualCompleted;
        
        public event System.EventHandler<ActualizarListaDeAutosParaSubastaReceivedEventArgs> ActualizarListaDeAutosParaSubastaReceived;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SubastAutos.Remoting.Remoting.BeginReportar(int idSubasta, int idVehiculo, string loggin, string fechaPropuesta, double montoSugerido, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginReportar(idSubasta, idVehiculo, loggin, fechaPropuesta, montoSugerido, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void SubastAutos.Remoting.Remoting.EndReportar(System.IAsyncResult result) {
            base.Channel.EndReportar(result);
        }
        
        private System.IAsyncResult OnBeginReportar(object[] inValues, System.AsyncCallback callback, object asyncState) {
            this.VerifyCallbackEvents();
            int idSubasta = ((int)(inValues[0]));
            int idVehiculo = ((int)(inValues[1]));
            string loggin = ((string)(inValues[2]));
            string fechaPropuesta = ((string)(inValues[3]));
            double montoSugerido = ((double)(inValues[4]));
            return ((SubastAutos.Remoting.Remoting)(this)).BeginReportar(idSubasta, idVehiculo, loggin, fechaPropuesta, montoSugerido, callback, asyncState);
        }
        
        private object[] OnEndReportar(System.IAsyncResult result) {
            ((SubastAutos.Remoting.Remoting)(this)).EndReportar(result);
            return null;
        }
        
        private void OnReportarCompleted(object state) {
            if ((this.ReportarCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ReportarCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ReportarAsync(int idSubasta, int idVehiculo, string loggin, string fechaPropuesta, double montoSugerido) {
            this.ReportarAsync(idSubasta, idVehiculo, loggin, fechaPropuesta, montoSugerido, null);
        }
        
        public void ReportarAsync(int idSubasta, int idVehiculo, string loggin, string fechaPropuesta, double montoSugerido, object userState) {
            if ((this.onBeginReportarDelegate == null)) {
                this.onBeginReportarDelegate = new BeginOperationDelegate(this.OnBeginReportar);
            }
            if ((this.onEndReportarDelegate == null)) {
                this.onEndReportarDelegate = new EndOperationDelegate(this.OnEndReportar);
            }
            if ((this.onReportarCompletedDelegate == null)) {
                this.onReportarCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnReportarCompleted);
            }
            base.InvokeAsync(this.onBeginReportarDelegate, new object[] {
                        idSubasta,
                        idVehiculo,
                        loggin,
                        fechaPropuesta,
                        montoSugerido}, this.onEndReportarDelegate, this.onReportarCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SubastAutos.Remoting.Remoting.BeginSalir(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSalir(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void SubastAutos.Remoting.Remoting.EndSalir(System.IAsyncResult result) {
            base.Channel.EndSalir(result);
        }
        
        private System.IAsyncResult OnBeginSalir(object[] inValues, System.AsyncCallback callback, object asyncState) {
            this.VerifyCallbackEvents();
            return ((SubastAutos.Remoting.Remoting)(this)).BeginSalir(callback, asyncState);
        }
        
        private object[] OnEndSalir(System.IAsyncResult result) {
            ((SubastAutos.Remoting.Remoting)(this)).EndSalir(result);
            return null;
        }
        
        private void OnSalirCompleted(object state) {
            if ((this.SalirCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SalirCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SalirAsync() {
            this.SalirAsync(null);
        }
        
        public void SalirAsync(object userState) {
            if ((this.onBeginSalirDelegate == null)) {
                this.onBeginSalirDelegate = new BeginOperationDelegate(this.OnBeginSalir);
            }
            if ((this.onEndSalirDelegate == null)) {
                this.onEndSalirDelegate = new EndOperationDelegate(this.OnEndSalir);
            }
            if ((this.onSalirCompletedDelegate == null)) {
                this.onSalirCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSalirCompleted);
            }
            base.InvokeAsync(this.onBeginSalirDelegate, null, this.onEndSalirDelegate, this.onSalirCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SubastAutos.Remoting.Remoting.BeginRegistrarse(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRegistrarse(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void SubastAutos.Remoting.Remoting.EndRegistrarse(System.IAsyncResult result) {
            base.Channel.EndRegistrarse(result);
        }
        
        private System.IAsyncResult OnBeginRegistrarse(object[] inValues, System.AsyncCallback callback, object asyncState) {
            this.VerifyCallbackEvents();
            return ((SubastAutos.Remoting.Remoting)(this)).BeginRegistrarse(callback, asyncState);
        }
        
        private object[] OnEndRegistrarse(System.IAsyncResult result) {
            ((SubastAutos.Remoting.Remoting)(this)).EndRegistrarse(result);
            return null;
        }
        
        private void OnRegistrarseCompleted(object state) {
            if ((this.RegistrarseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RegistrarseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RegistrarseAsync() {
            this.RegistrarseAsync(null);
        }
        
        public void RegistrarseAsync(object userState) {
            if ((this.onBeginRegistrarseDelegate == null)) {
                this.onBeginRegistrarseDelegate = new BeginOperationDelegate(this.OnBeginRegistrarse);
            }
            if ((this.onEndRegistrarseDelegate == null)) {
                this.onEndRegistrarseDelegate = new EndOperationDelegate(this.OnEndRegistrarse);
            }
            if ((this.onRegistrarseCompletedDelegate == null)) {
                this.onRegistrarseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRegistrarseCompleted);
            }
            base.InvokeAsync(this.onBeginRegistrarseDelegate, null, this.onEndRegistrarseDelegate, this.onRegistrarseCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SubastAutos.Remoting.Remoting.BeginModificarSubasta(int idSubasta, int idVehiculo, string loggin, string fechaPropuesta, double montoSugerido, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginModificarSubasta(idSubasta, idVehiculo, loggin, fechaPropuesta, montoSugerido, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SubastAutos.Remoting.Subasta SubastAutos.Remoting.Remoting.EndModificarSubasta(System.IAsyncResult result) {
            return base.Channel.EndModificarSubasta(result);
        }
        
        private System.IAsyncResult OnBeginModificarSubasta(object[] inValues, System.AsyncCallback callback, object asyncState) {
            this.VerifyCallbackEvents();
            int idSubasta = ((int)(inValues[0]));
            int idVehiculo = ((int)(inValues[1]));
            string loggin = ((string)(inValues[2]));
            string fechaPropuesta = ((string)(inValues[3]));
            double montoSugerido = ((double)(inValues[4]));
            return ((SubastAutos.Remoting.Remoting)(this)).BeginModificarSubasta(idSubasta, idVehiculo, loggin, fechaPropuesta, montoSugerido, callback, asyncState);
        }
        
        private object[] OnEndModificarSubasta(System.IAsyncResult result) {
            SubastAutos.Remoting.Subasta retVal = ((SubastAutos.Remoting.Remoting)(this)).EndModificarSubasta(result);
            return new object[] {
                    retVal};
        }
        
        private void OnModificarSubastaCompleted(object state) {
            if ((this.ModificarSubastaCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ModificarSubastaCompleted(this, new ModificarSubastaCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ModificarSubastaAsync(int idSubasta, int idVehiculo, string loggin, string fechaPropuesta, double montoSugerido) {
            this.ModificarSubastaAsync(idSubasta, idVehiculo, loggin, fechaPropuesta, montoSugerido, null);
        }
        
        public void ModificarSubastaAsync(int idSubasta, int idVehiculo, string loggin, string fechaPropuesta, double montoSugerido, object userState) {
            if ((this.onBeginModificarSubastaDelegate == null)) {
                this.onBeginModificarSubastaDelegate = new BeginOperationDelegate(this.OnBeginModificarSubasta);
            }
            if ((this.onEndModificarSubastaDelegate == null)) {
                this.onEndModificarSubastaDelegate = new EndOperationDelegate(this.OnEndModificarSubasta);
            }
            if ((this.onModificarSubastaCompletedDelegate == null)) {
                this.onModificarSubastaCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnModificarSubastaCompleted);
            }
            base.InvokeAsync(this.onBeginModificarSubastaDelegate, new object[] {
                        idSubasta,
                        idVehiculo,
                        loggin,
                        fechaPropuesta,
                        montoSugerido}, this.onEndModificarSubastaDelegate, this.onModificarSubastaCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SubastAutos.Remoting.Remoting.BeginVehiculosDeSubastaActual(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginVehiculosDeSubastaActual(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SubastAutos.Remoting.Subasta SubastAutos.Remoting.Remoting.EndVehiculosDeSubastaActual(System.IAsyncResult result) {
            return base.Channel.EndVehiculosDeSubastaActual(result);
        }
        
        private System.IAsyncResult OnBeginVehiculosDeSubastaActual(object[] inValues, System.AsyncCallback callback, object asyncState) {
            this.VerifyCallbackEvents();
            return ((SubastAutos.Remoting.Remoting)(this)).BeginVehiculosDeSubastaActual(callback, asyncState);
        }
        
        private object[] OnEndVehiculosDeSubastaActual(System.IAsyncResult result) {
            SubastAutos.Remoting.Subasta retVal = ((SubastAutos.Remoting.Remoting)(this)).EndVehiculosDeSubastaActual(result);
            return new object[] {
                    retVal};
        }
        
        private void OnVehiculosDeSubastaActualCompleted(object state) {
            if ((this.VehiculosDeSubastaActualCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.VehiculosDeSubastaActualCompleted(this, new VehiculosDeSubastaActualCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void VehiculosDeSubastaActualAsync() {
            this.VehiculosDeSubastaActualAsync(null);
        }
        
        public void VehiculosDeSubastaActualAsync(object userState) {
            if ((this.onBeginVehiculosDeSubastaActualDelegate == null)) {
                this.onBeginVehiculosDeSubastaActualDelegate = new BeginOperationDelegate(this.OnBeginVehiculosDeSubastaActual);
            }
            if ((this.onEndVehiculosDeSubastaActualDelegate == null)) {
                this.onEndVehiculosDeSubastaActualDelegate = new EndOperationDelegate(this.OnEndVehiculosDeSubastaActual);
            }
            if ((this.onVehiculosDeSubastaActualCompletedDelegate == null)) {
                this.onVehiculosDeSubastaActualCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnVehiculosDeSubastaActualCompleted);
            }
            base.InvokeAsync(this.onBeginVehiculosDeSubastaActualDelegate, null, this.onEndVehiculosDeSubastaActualDelegate, this.onVehiculosDeSubastaActualCompletedDelegate, userState);
        }
        
        private void OnActualizarListaDeAutosParaSubastaReceived(object state) {
            if ((this.ActualizarListaDeAutosParaSubastaReceived != null)) {
                object[] results = ((object[])(state));
                this.ActualizarListaDeAutosParaSubastaReceived(this, new ActualizarListaDeAutosParaSubastaReceivedEventArgs(results, null, false, null));
            }
        }
        
        private void VerifyCallbackEvents() {
            if (((this.useGeneratedCallback != true) 
                        && (this.ActualizarListaDeAutosParaSubastaReceived != null))) {
                throw new System.InvalidOperationException("No se pueden usar eventos de devolución de llamada cuando se especifica el objeto" +
                        " InstanceContext de devolución de llamada. Elija entre especificar el objeto Ins" +
                        "tanceContext de devolución de llamada o suscribirse a los eventos de devolución " +
                        "de llamada.");
            }
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            this.VerifyCallbackEvents();
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override SubastAutos.Remoting.Remoting CreateChannel() {
            return new RemotingClientChannel(this);
        }
        
        private class RemotingClientCallback : object, RemotingCallback {
            
            private RemotingClient proxy;
            
            public void Initialize(RemotingClient proxy) {
                this.proxy = proxy;
            }
            
            public void ActualizarListaDeAutosParaSubasta(SubastAutos.Remoting.Subasta s) {
                this.proxy.OnActualizarListaDeAutosParaSubastaReceived(new object[] {
                            s});
            }
        }
        
        private class RemotingClientChannel : ChannelBase<SubastAutos.Remoting.Remoting>, SubastAutos.Remoting.Remoting {
            
            public RemotingClientChannel(System.ServiceModel.DuplexClientBase<SubastAutos.Remoting.Remoting> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginReportar(int idSubasta, int idVehiculo, string loggin, string fechaPropuesta, double montoSugerido, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[5];
                _args[0] = idSubasta;
                _args[1] = idVehiculo;
                _args[2] = loggin;
                _args[3] = fechaPropuesta;
                _args[4] = montoSugerido;
                System.IAsyncResult _result = base.BeginInvoke("Reportar", _args, callback, asyncState);
                return _result;
            }
            
            public void EndReportar(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("Reportar", _args, result);
            }
            
            public System.IAsyncResult BeginSalir(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("Salir", _args, callback, asyncState);
                return _result;
            }
            
            public void EndSalir(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("Salir", _args, result);
            }
            
            public System.IAsyncResult BeginRegistrarse(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("Registrarse", _args, callback, asyncState);
                return _result;
            }
            
            public void EndRegistrarse(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("Registrarse", _args, result);
            }
            
            public System.IAsyncResult BeginModificarSubasta(int idSubasta, int idVehiculo, string loggin, string fechaPropuesta, double montoSugerido, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[5];
                _args[0] = idSubasta;
                _args[1] = idVehiculo;
                _args[2] = loggin;
                _args[3] = fechaPropuesta;
                _args[4] = montoSugerido;
                System.IAsyncResult _result = base.BeginInvoke("ModificarSubasta", _args, callback, asyncState);
                return _result;
            }
            
            public SubastAutos.Remoting.Subasta EndModificarSubasta(System.IAsyncResult result) {
                object[] _args = new object[0];
                SubastAutos.Remoting.Subasta _result = ((SubastAutos.Remoting.Subasta)(base.EndInvoke("ModificarSubasta", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginVehiculosDeSubastaActual(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("VehiculosDeSubastaActual", _args, callback, asyncState);
                return _result;
            }
            
            public SubastAutos.Remoting.Subasta EndVehiculosDeSubastaActual(System.IAsyncResult result) {
                object[] _args = new object[0];
                SubastAutos.Remoting.Subasta _result = ((SubastAutos.Remoting.Subasta)(base.EndInvoke("VehiculosDeSubastaActual", _args, result)));
                return _result;
            }
        }
    }
    
    public class ActualizarListaDeAutosParaSubastaReceivedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ActualizarListaDeAutosParaSubastaReceivedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public SubastAutos.Remoting.Subasta s {
            get {
                base.RaiseExceptionIfNecessary();
                return ((SubastAutos.Remoting.Subasta)(this.results[0]));
            }
        }
    }
}
